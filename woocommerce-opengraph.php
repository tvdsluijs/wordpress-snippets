<?php
/**
 * @project     snippets
 * @name        WooCommerce Opengraph Twitter, Facebook, Pinterest
 * @description This script is for adding pinterest, twitter and facebook head tags meta
 * @author      Theo van der Sluijs ( theo@vandersluijs.nl )
 * @copyright   2017 Theo van der Sluijs
 * @license     All rights reserved!
 * @file        woocommerce-opengraph.php
 * @date        07/08/2017
 * @time        09:11
 */

// @todo : <head prefix='og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# product: http://ogp.me/ns/product#'


//remove standard opengraph type
function bt_remove_og_type( $og_type ) {
    return false;
}


//remove standard opengraph sitename
function bt_remove_og_sitename( $og_sitename ) {
    return false;
}

//remove standard opengraph url
function my_opengraph_url( $url ) {
    return false;
}

add_action('wp_head','hook_woometa');

function hook_woometa() {
    global $post;

    $output = "";
    if(is_product()) {
        $fbappid = NULL;
        $twitteraccount = NULL ;

        //yoast seo remove open graph
        add_filter( 'wpseo_opengraph_url', 'my_opengraph_url' );
        add_filter( 'wpseo_opengraph_site_name', 'bt_remove_og_sitename' );
        add_filter( 'wpseo_opengraph_type', 'bt_remove_og_type' );
        //jetpack remove opengraph
        add_filter( 'jetpack_enable_opengraph', '__return_false', 99 );

        $product = new WC_Product( get_the_ID() );
        $product_image = wp_get_attachment_url( get_post_thumbnail_id($post->ID), 'thumbnail' );
        $currency = get_woocommerce_currency();

        $output .= "<!-- This part is generated by a snippet you can find on http://vandersluijs.nl -->\n";
        if(isset($fbappid) && $fbappid !== null){
            $output .= "<meta property='fb:app_id' content='{$fbappid}' />\n";
        }

        $output .= "<meta property='og:type' content='product' />\n";

        if ($product->get_permalink() !== null) {
            $output .= "<meta property='og:url' content='{$product->get_permalink()}' />\n";
        }

        if ($product->get_name() !== null) {
            $output .= "<meta property='og:title' content='{$product->get_name()}' />\n";
            $output .= "<meta name='twitter:title' content='{$product->get_name()}' />\n";
        }

        if (isset($product_image) && $product_image !== null) {
            $output .= "<meta property='og:image' content='{$product_image}' />\n";
            $output .= "<meta name='twitter:image' content='{$product_image}' />\n";
        }

        if (get_bloginfo('name') !== null) {
            $blogname = get_bloginfo('name');
            $output .= "<meta property='og:site_name' content='{$blogname}' />\n";
        }

        if ($product->get_permalink() !== null) {
            $output .= "<meta property='product:product_link' content='{$product->get_permalink()}' />\n";
        }

        $brands = wp_get_post_terms($post->ID, 'product_brand', array("fields" => "all"));
        if ($brands !== null && is_array($brands)) {
            foreach ($brands as $brand) {
                $output .= "<meta property='product:brand' content='{$brand->name}' />\n";
                break;
            }
        }

        $cats = get_the_terms($post->ID, 'product_cat');
        if ($cats !== null && is_array($cats)) {
            foreach ($cats as $cat) {
                $output .= "<meta property='product:category' content='{$cat->name}' />\n";
                break;
            }
        }


        if ($product->get_weight() !== null && $product->get_weight() !== '') {
            $output .= "<meta property='product:weight:value' content='{$product->get_weight()}' />\n";
            $units = get_option('woocommerce_weight_unit');
            $output .= "<meta property='product:weight:units' content='{$units}' />\n";
        }

        if ($product->get_regular_price() !== null) {
            $output .= "<meta property='product:original_price:amount' content='{$product->get_regular_price()}' />\n";
            $output .= "<meta property='product:original_price:currency' content='{$currency}' />\n";
        }

        if ($product->get_price_excluding_tax() !== null) {
            $output .= "<meta property='product:pretax_price:amount' content='{$product->get_price_excluding_tax()}' />\n";
            $output .= "<meta property='product:pretax_price:currency' content='{$currency}' />\n";
        }

        if ($product->get_price() !== null) {
            $output .= "<meta property='product:price:amount'content='{$product->get_price()}' />\n";
            $output .= "<meta property='product:price:currency'content='{$currency}' />\n";
        }

        if ($product->is_on_sale()) {
            if ($product->get_sale_price() !== null) {
                $output .= "<meta property='product:sale_price:amount' content='{$product->get_sale_price()}' />\n";
                $output .= "<meta property='product:sale_price:currency' content='{$currency}' />\n";
            }
        }
        //twittercard!
        $output .= "<meta name='twitter:card' content='summary' />\n";

        if(isset($twitteraccount) && $twitteraccount !== null){
            $output .="<meta name='twitter:site' content='@{$twitteraccount}' />\n";
        }

        if ($product->get_short_description() !== null && $product->get_short_description() !== '') {
            $desc = wp_strip_all_tags($product->get_short_description());
            $output .= "<meta name='twitter:description' content='{$desc}' />\n";
            $output .= "<meta property='og:description' content='{$desc}' />\n";
        } elseif ($product->get_description() !== null && $product->get_description() !== '') {
            $desc = wp_strip_all_tags($product->get_description());
            $output .= "<meta name='twitter:description' content='{$desc}' />\n";
            $output .= "<meta property='og:description' content='{$desc}' />\n";
        }

        $output .= "<!-- End of snippet by http://vandersluijs.nl -->\n";

    }

    echo $output;
}

function doctype_opengraph($output) {
    return $output . 'xmlns:product="http://ogp.me/ns/product#"';
}

add_filter('language_attributes', 'doctype_opengraph');